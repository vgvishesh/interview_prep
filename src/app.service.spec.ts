import { max } from "rxjs";
import { BST, BinaryTree, DSAService, MaxHeap, HeapMod, LinkList, RecentCounter, SmallestInfiniteSet, TreeNode, Trie, TrieNode, Master, BSTIterator, StockSpanner } from "./app.service"

describe('DSA service tests', () => {
  it.skip('test_missing_number', () => {
    let s = new DSAService();
    const res = s.missingNumber([6, 1, 2, 8, 3, 4, 7, 10, 5], 10);
    console.log(res);
  });

  it.skip('test_trailingZeroes', () => {
    let s = new DSAService();
    const res = s.trailingZeroes(384);
    console.log(res);
  });

  it.skip('test_climbStairs', () => {
    let s = new DSAService();
    const res = s.climbStairs(10);
    console.log(res);
  });

  it.skip('test_reverseWords', () => {
    let s = new DSAService();
    const res = s.reverseWords('a good example');
    console.log(res);
  });

  it.skip('test_productExceptSelf', () => {
    let s = new DSAService();
    const res = s.productExceptSelf([1, 2, 3, 4]);
    console.log(res);
  });

  it.skip('test_increasingTriplet', () => {
    let s = new DSAService();
    const res = s.increasingTriplet([5, 4, 3, 2, 1]);
    console.log(res);
  });

  it.skip('test_compress', () => {
    let s = new DSAService();
    const res = s.compress(["a", "b", "c", "c", "c", "d", "d"]);
    console.log(res);
  });

  it.skip('test_isSubsequence', () => {
    let s = new DSAService();
    const res = s.isSubsequence("", "axc");
    console.log(res);
  });

  it.skip('test_maxArea', () => {
    let s = new DSAService();
    const res = s.maxArea([1, 8, 6, 2, 5, 4, 8, 3, 7]);
    console.log(res);
  });

  it.skip('test_maxOperations', () => {
    let s = new DSAService();
    const res = s.maxOperations([3, 1, 3, 4, 3], 6);
    // 3, 5, 1, 5
    console.log(res);
  });

  it.skip('testfindMaxAverage', () => {
    let s = new DSAService();
    const res = s.findMaxAverage([5], 1);
    // 3, 5, 1, 5
    console.log(res);
  });

  it.skip('test_maxVowels', () => {
    let s = new DSAService();
    let res = s.maxVowels('aeiou', 2);
    console.log(res);

    res = s.maxVowels('leetcode', 3);
    console.log(res);
  });

  it.skip('test_closeStrings', () => {
    let s = new DSAService();
    let res = s.closeStrings('cabbba', "abbccc");
    console.log(res);

    res = s.closeStrings('uau', 'ssx');
    console.log(res);
  });

  it.skip('test_equalPairs', () => {
    let s = new DSAService();
    let res = s.equalPairs([[3, 2, 1], [1, 7, 6], [2, 7, 7]]);
    console.log(res);

    res = s.equalPairs([[3, 1, 2, 2], [1, 4, 4, 5], [2, 4, 2, 2], [2, 4, 2, 2]]);
    console.log(res);
  });

  it.skip('test_largestAltitude', () => {
    let s = new DSAService();
    let res = s.largestAltitude([-5, 1, 5, 0, -7]);
    console.log(res);

    res = s.largestAltitude([52, -91, 72]);
    console.log(res);
  });

  it.skip('test_removeStars', () => {
    let s = new DSAService();
    let res = s.removeStars("leet**cod*e");
    console.log(res);

    res = s.removeStars("erase*****");
    console.log(res);
  });

  it.skip('test_removeKdigits', () => {
    let s = new DSAService();
    let res = s.removeKdigits("", 100000);
    console.log(res);

    res = s.removeKdigits("10200", 1);
    console.log(res);

    res = s.removeKdigits("1432219", 3);
    console.log(res);

    res = s.removeKdigits("10", 1);
    console.log(res);

    res = s.removeKdigits("112", 1);
    console.log(res);
  });

  it.skip('test_asteroidCollision', () => {
    let s = new DSAService();
    let res = s.asteroidCollision([-2, -1, 1, 2]);
    console.log(res);

    res = s.asteroidCollision([8, -8]);
    console.log(res);

    res = s.asteroidCollision([10, 2, -5]);
    console.log(res);

    res = s.asteroidCollision([5, 10, -5]);
    console.log(res);

    res = s.asteroidCollision([-5, -6, 8, -8]);
    console.log(res);

    res = s.asteroidCollision([1, -1, -2, -2]);
    console.log(res);
  });

  it.skip('test_asteroidCollision', () => {
    let s = new DSAService();
    // let res = s.decodeString("3[a]2[bc]");
    // console.log(res);

    // res = s.decodeString("3[a2[c]]");
    // console.log(res);

    let res = s.decodeString("3[z]2[2[y]pq4[2[jk]e1[f]]]ef");
    console.log(res);
  });

  it.skip('test_RecentConter', () => {
    let s = new RecentCounter();
    let res = s.ping(1);
    console.log(res);

    console.log(s.ping(100));
    console.log(s.ping(3001));
    console.log(s.ping(3002));
  });

  it.skip('test_longestOnes', () => {
    let s = new DSAService();
    let res = s.longestOnes([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 3);
    console.log(res);
  });

  it.skip('test_longestSubarray', () => {
    let s = new DSAService();
    let res = s.longestSubarray([0, 1, 1, 1, 0, 1, 1, 0, 1]);
    console.log(res);

    res = s.longestSubarray([1, 1, 1]);
    console.log(res);

    res = s.longestSubarray([1, 1, 0, 1]);
    console.log(res);
  });

  it.skip('test_deleteMiddle', () => {
    let s = new LinkList([1, 2, 3, 4]);
    s.deleteMiddle(s.head)
    console.log(s.printLL());

    s = new LinkList([1, 3, 4, 7, 1, 2, 6]);
    s.deleteMiddle(s.head)
    console.log(s.printLL());

    s = new LinkList([2, 1]);
    s.deleteMiddle(s.head)
    console.log(s.printLL());
  });

  it.skip('test_oddEvenList', () => {
    let s = new LinkList([2, 1, 3, 5, 6, 4, 7, 8]);
    s.oddEvenList(s.head)
    console.log(s.printLL());

    s = new LinkList([2]);
    s.oddEvenList(s.head)
    console.log(s.printLL());
  });

  it.skip('test_reverseList', () => {
    let s = new LinkList([1]);
    s.reverseList(s.head)
    console.log(s.printLL());
  });

  it.skip('test_pairSum', () => {
    let s = new LinkList([1, 100000]);
    console.log(s.pairSum(s.head));
  });

  it.skip('test_inorderTraversal', () => {
    let s = new BST([4, 2, 7, 1, 3]);
    console.log(s.inorderTraversal(s.root));
  });

  it.skip('test_searchBST', () => {
    let s = new BST([4, 2, 7, 1, 3]);
    // s.searchBST(s.root, 2)
    console.log(s.inorderTraversal(s.searchBST(s.root, 2)));
  });

  it.skip('test_binaryTree', () => {
    // let s = new BinaryTree([2, null, 4, 10, 8, null, null, 4]);
    // let root = new TreeNode(2, null, new TreeNode(4, new TreeNode(10, null, null), new TreeNode(8, new TreeNode(4, null, null), null)));
    // console.log(BinaryTree.goodNodes(root));

    let root = new TreeNode(-5, new TreeNode(-1, null, null), new TreeNode(-4, new TreeNode(-5, new TreeNode(-5, null, null), null), new TreeNode(0, new TreeNode(-1, null, new TreeNode(-3, null, new TreeNode(-5, null, new TreeNode(-4, null, null)))), new TreeNode(2, null, null))));
    console.log(BinaryTree.goodNodes(root));
  });

  it.skip('test_lowestCommonAncestor', () => {
    // let s = new BinaryTree([2, null, 4, 10, 8, null, null, 4]);
    // let root = new TreeNode(2, null, new TreeNode(4, new TreeNode(10, null, null), new TreeNode(8, new TreeNode(4, null, null), null)));
    // console.log(BinaryTree.goodNodes(root));

    const p = new TreeNode(5, new TreeNode(6, null, null), new TreeNode(2, new TreeNode(7, null, null), new TreeNode(4, null, null)));
    const q = new TreeNode(1, new TreeNode(0, null, null), new TreeNode(8, null, null));
    let root = new TreeNode(3, p, q);
    console.log(BinaryTree.lowestCommonAncestor(root, p, q));
  });

  it.skip('test_maxLevelSum', () => {
    // let s = new BinaryTree([2, null, 4, 10, 8, null, null, 4]);
    // let root = new TreeNode(2, null, new TreeNode(4, new TreeNode(10, null, null), new TreeNode(8, new TreeNode(4, null, null), null)));
    // console.log(BinaryTree.goodNodes(root));

    let root = new TreeNode(-100, new TreeNode(-200, new TreeNode(-20, null, null), new TreeNode(-5, null, null)), new TreeNode(-300, new TreeNode(-10, null, null), null));
    console.log(BinaryTree.maxLevelSum(root));
  });

  it.skip('test_removeDuplicates', () => {
    const s = new DSAService();
    let inA = [0, 0, 1, 1, 1, 1, 2, 3, 3];
    const r = s.removeDuplicates(inA);
    console.log(inA.slice(0, r));
  });

  it.skip('test_maxProfit', () => {
    const s = new DSAService();
    let inA = [7, 1, 5, 3, 6, 4];
    console.log(s.maxProfit(inA));

    inA = [1, 2, 3, 4, 5];
    console.log(s.maxProfit(inA));

    inA = [7, 6, 4, 3, 1];
    console.log(s.maxProfit(inA));
  });

  it.skip('test_canJump', () => {
    const s = new DSAService();
    let inA = [3, 2, 1, 0, 4];
    console.log(s.canJump(inA));

    inA = [2, 3, 1, 1, 4];
    console.log(s.canJump(inA));

    // inA = [1, 2, 3, 4, 5];
    // console.log(s.maxProfit(inA));

    // inA = [7, 6, 4, 3, 1];
    // console.log(s.maxProfit(inA));
  });

  it.skip('test_hIndex', () => {
    const s = new DSAService();
    // console.log(s.hIndex([3, 0, 6, 1, 5]));
    // console.log(s.hIndex([1, 2, 3, 5, 6, 10, 11]));
    // console.log(s.hIndex([1, 3, 1]));
    console.log(s.hIndex([11, 15]));
  });

  it.skip('test_popMax', () => {
    const s = new MaxHeap([3, 2, 3, 1, 2, 4, 5, 5, 6]);
    let max;
    for (let i = 0; i < 8; i++) {
      max = s.popMax();
    }
    console.log(max);
  });

  it.skip('test_smallestInfiniteSet', () => {
    const s = new SmallestInfiniteSet();
    console.log(s.popSmallest());
    s.addBack(1);
    console.log(s.popSmallest());
    console.log(s.popSmallest());
    console.log(s.popSmallest());
    s.addBack(2);
    s.addBack(3);
    console.log(s.popSmallest());
    console.log(s.popSmallest());
  });

  it.skip('test_findElement', () => {
    function maxScore(nums1: number[], nums2: number[], k: number): number {
      const heap2 = new HeapMod(nums2);
      const popped: {
        val: number;
        index: number;
      }[] = [];
      for (let i = 0; i < nums2.length; i++) {
        popped.push(heap2.popMax());
      }

      popped.forEach(p => console.log(p));
      let endIndex = k - 1;
      let max;
      while (endIndex < nums1.length) {
        let sum = 0;
        for (let i = 0; i < k; i++) {
          sum += nums1[popped[endIndex - i].index];
        }
        let product = sum * popped[endIndex].val;
        if (max === undefined || max < product) {
          max = product;
        }
        endIndex++;
      }

      return max;

      // let sum = 0;
      // let indices: number[] = [];
      // for (let i = 0; i < k; i++) {
      //   let pop = heap1.popMax();
      //   sum += pop.val;
      //   indices.push(pop.index);
      //   console.log(pop.index);
      // }

      // let min = nums2[indices[0]];
      // for (let i = 1; i < indices.length; i++) {
      //   if (nums2[indices[i]] < min) {
      //     min = nums2[indices[i]];
      //   }
      // }

      // const p1 = min * sum;
      // console.log(p1);
      // console.log(min);
      // console.log(sum);


      // indices = [];
      // for (let i = 0; i < k; i++) {
      //   let pop = heap2.popMax();
      //   indices.push(pop.index);
      // }

      // min = nums2[indices[indices.length - 1]];
      // sum = 0;
      // for (let i = 0; i < indices.length; i++) {
      //   sum += nums1[indices[i]];
      //   console.log(indices[i]);
      // }

      // const p2 = min * sum;
      // console.log(p2);
      // console.log(min);
      // console.log(sum);

      // return p1 > p2 ? p1 : p2;
    }
    // console.log(maxScore([4, 2, 3, 1, 1], [7, 5, 10, 9, 6], 1));
    // console.log(maxScore([1, 3, 3, 2], [2, 1, 3, 4], 3));
    // console.log(maxScore([22, 5, 25, 15, 28, 1], [22, 30, 25, 25, 9, 18], 3));
    console.log(maxScore([2, 1, 14, 12], [11, 7, 13, 6], 3));
  });

  it.skip('test_Trie', () => {
    const trie = new Trie();
    trie.insert("apple");
    console.log(trie.search("apple"));   // return True
    console.log(trie.search("app"));     // return False
    console.log(trie.startsWith("app")); // return True
    trie.insert("app");
    console.log(trie.search("app"));     // return True
  });

  it.skip('test_Trie', () => {
    function suggestedProducts(products: string[], searchWord: string): string[][] {
      const trie = new Trie();
      for (let product of products) {
        trie.insert(product);
      }

      let prefix = '';
      let allSuggesstions: string[][] = [];
      for (let w of searchWord) {
        prefix += w;
        let products = trie.prefixWords(prefix);
        allSuggesstions.push(products);
      }

      console.log(allSuggesstions);
      return allSuggesstions;
    };
    suggestedProducts(["mobile", "mouse", "moneypot", "monitor", "mousepad"], "mouse");
    suggestedProducts(["havana"], "havana");
  });

  it.skip('test_rob', () => {
    let s = new DSAService();
    console.log(s.rob([1, 2, 3, 1]));
    console.log(s.rob([2, 7, 9, 3, 1]));
  });

  it.skip('test_isInterleave', () => {
    let s = new DSAService();
    console.log(s.isInterleave("aabcc", "dbbca", "aadbbcbcac"));
    console.log(s.isInterleave("aabcc", "dbbca", "aadbbbaccc"));
    console.log(s.isInterleave("", "", ""));
    console.log(s.isInterleave("a", "b", "a"));
    console.log(s.isInterleave("a", "", "a"));
    console.log(s.isInterleave("abababababababababababababababababababababababababababababababababababababababababababababababababbb", "babababababababababababababababababababababababababababababababababababababababababababababababaaaba", "abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababbb"));
  });

  it.skip('test_Candy', () => {
    let s = new DSAService();
    console.log(s.candy([1, 0, 2]));
    console.log(s.candy([1, 2, 2]));
    console.log(s.candy([1, 3, 2, 2, 1]));
  });

  it.skip('test_trap', () => {
    let s = new DSAService();
    console.log(s.trap([4, 2, 0, 3, 2, 5]));
    console.log(s.trap([0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]));
    console.log(s.trap([4, 2, 3]));
  })

  it.skip('test_findSubscring', () => {
    let s = new DSAService();
    console.log(s.findSubString("barfoothefoobarman", ["foo", "bar"]));
    console.log(s.findSubString("wordgoodgoodgoodbestword", ["word", "good", "best", "word"]));
    console.log(s.findSubString("barfoofoobarthefoobarman", ["bar", "foo", "the"]));
    console.log(s.findSubString("wordgoodgoodgoodbestword", ["word", "good", "best", "good"]));
    console.log(s.findSubString("aaaaaaaaaaaaaa", ["aa", "aa"]));
  });

  it.skip('test_minWindow', () => {
    let s = new DSAService();
    console.log(s.minWindow("ADOBECODEBANC", "ABC"));
    console.log(s.minWindow("a", "a"));
    console.log(s.minWindow("a", "aa"));
    console.log(s.minWindow("a", "b"));
    console.log(s.minWindow("bbaa", "aba"));
    console.log(s.minWindow("aaaaaaaaaaaabbbbbcdd", "abcdd"));
  });

  it.skip('test_calc', () => {
    let s = new DSAService();
    // console.log(s.calculate("1 + 1"))
    // console.log(s.calculate(" 2-1 + 2 "))
    // console.log(s.calculate("(1+(4+5+2)-3)+(6+8)"))
    // console.log(s.calculate("2147483647"))
    console.log(s.calculate("1-(     -2)"));
  });

  it.skip('test_reverseKGroup', () => {
    // let ll = new LinkList([1, 2, 3, 4, 5]);
    // let res = ll.reverseKGroup(ll.head, 2);
    // ll.head = res;
    // console.log(ll.printLL());

    // ll = new LinkList([1, 2, 3, 4, 5]);
    // res = ll.reverseKGroup(ll.head, 3);
    // ll.head = res;
    // console.log(ll.printLL());

    let ll = new LinkList([1, 2]);
    let res = ll.reverseKGroup(ll.head, 2);
    ll.head = res;
    console.log(ll.printLL());
  });

  it.skip('test_maxPathSum', () => {
    // let root = new TreeNode(1, new TreeNode(-2, new TreeNode(1, new TreeNode(-1, null, null), null), new TreeNode(3, null, null)), new TreeNode(-3, new TreeNode(-2, null, null), null));
    let root = new TreeNode(-3, null, null);
    console.log(BinaryTree.maxPathSum(root));
  });

  it.skip('test_ladderlength', () => {
    let s = new DSAService();
    // console.log(s.ladderLength("hit", "cog", ["hot", "dot", "dog", "lot", "log", "cog"]));
    // console.log(s.ladderLength("hit", "cog", ["hot", "dot", "dog", "lot", "log"]));
    // console.log(s.ladderLength("hot", "dog", ["hot", "cog", "dog", "tot", "hog", "hop", "pot", "dot"]));
    // console.log(s.ladderLength("hot", "dog", ["hot", "dog", "cog", "pot", "dot"]));
    // console.log(s.ladderLength("qa", "sq", ["si", "go", "se", "cm", "so", "ph", "mt", "db", "mb", "sb", "kr", "ln", "tm", "le", "av", "sm", "ar", "ci", "ca", "br", "ti", "ba", "to", "ra", "fa", "yo", "ow", "sn", "ya", "cr", "po", "fe", "ho", "ma", "re", "or", "rn", "au", "ur", "rh", "sr", "tc", "lt", "lo", "as", "fr", "nb", "yb", "if", "pb", "ge", "th", "pm", "rb", "sh", "co", "ga", "li", "ha", "hz", "no", "bi", "di", "hi", "qa", "pi", "os", "uh", "wm", "an", "me", "mo", "na", "la", "st", "er", "sc", "ne", "mn", "mi", "am", "ex", "pt", "io", "be", "fm", "ta", "tb", "ni", "mr", "pa", "he", "lr", "sq", "ye"]));
    console.log(s.ladderLength("sand", "acne", ["slit", "bunk", "wars", "ping", "viva", "wynn", "wows", "irks", "gang", "pool", "mock", "fort", "heel", "send", "ship", "cols", "alec", "foal", "nabs", "gaze", "giza", "mays", "dogs", "karo", "cums", "jedi", "webb", "lend", "mire", "jose", "catt", "grow", "toss", "magi", "leis", "bead", "kara", "hoof", "than", "ires", "baas", "vein", "kari", "riga", "oars", "gags", "thug", "yawn", "wive", "view", "germ", "flab", "july", "tuck", "rory", "bean", "feed", "rhee", "jeez", "gobs", "lath", "desk", "yoko", "cute", "zeus", "thus", "dims", "link", "dirt", "mara", "disc", "limy", "lewd", "maud", "duly", "elsa", "hart", "rays", "rues", "camp", "lack", "okra", "tome", "math", "plug", "monk", "orly", "friz", "hogs", "yoda", "poop", "tick", "plod", "cloy", "pees", "imps", "lead", "pope", "mall", "frey", "been", "plea", "poll", "male", "teak", "soho", "glob", "bell", "mary", "hail", "scan", "yips", "like", "mull", "kory", "odor", "byte", "kaye", "word", "honk", "asks", "slid", "hopi", "toke", "gore", "flew", "tins", "mown", "oise", "hall", "vega", "sing", "fool", "boat", "bobs", "lain", "soft", "hard", "rots", "sees", "apex", "chan", "told", "woos", "unit", "scow", "gilt", "beef", "jars", "tyre", "imus", "neon", "soap", "dabs", "rein", "ovid", "hose", "husk", "loll", "asia", "cope", "tail", "hazy", "clad", "lash", "sags", "moll", "eddy", "fuel", "lift", "flog", "land", "sigh", "saks", "sail", "hook", "visa", "tier", "maws", "roeg", "gila", "eyes", "noah", "hypo", "tore", "eggs", "rove", "chap", "room", "wait", "lurk", "race", "host", "dada", "lola", "gabs", "sobs", "joel", "keck", "axed", "mead", "gust", "laid", "ends", "oort", "nose", "peer", "kept", "abet", "iran", "mick", "dead", "hags", "tens", "gown", "sick", "odis", "miro", "bill", "fawn", "sumo", "kilt", "huge", "ores", "oran", "flag", "tost", "seth", "sift", "poet", "reds", "pips", "cape", "togo", "wale", "limn", "toll", "ploy", "inns", "snag", "hoes", "jerk", "flux", "fido", "zane", "arab", "gamy", "raze", "lank", "hurt", "rail", "hind", "hoot", "dogy", "away", "pest", "hoed", "pose", "lose", "pole", "alva", "dino", "kind", "clan", "dips", "soup", "veto", "edna", "damp", "gush", "amen", "wits", "pubs", "fuzz", "cash", "pine", "trod", "gunk", "nude", "lost", "rite", "cory", "walt", "mica", "cart", "avow", "wind", "book", "leon", "life", "bang", "draw", "leek", "skis", "dram", "ripe", "mine", "urea", "tiff", "over", "gale", "weir", "defy", "norm", "tull", "whiz", "gill", "ward", "crag", "when", "mill", "firs", "sans", "flue", "reid", "ekes", "jain", "mutt", "hems", "laps", "piss", "pall", "rowe", "prey", "cull", "knew", "size", "wets", "hurl", "wont", "suva", "girt", "prys", "prow", "warn", "naps", "gong", "thru", "livy", "boar", "sade", "amok", "vice", "slat", "emir", "jade", "karl", "loyd", "cerf", "bess", "loss", "rums", "lats", "bode", "subs", "muss", "maim", "kits", "thin", "york", "punt", "gays", "alpo", "aids", "drag", "eras", "mats", "pyre", "clot", "step", "oath", "lout", "wary", "carp", "hums", "tang", "pout", "whip", "fled", "omar", "such", "kano", "jake", "stan", "loop", "fuss", "mini", "byrd", "exit", "fizz", "lire", "emil", "prop", "noes", "awed", "gift", "soli", "sale", "gage", "orin", "slur", "limp", "saar", "arks", "mast", "gnat", "port", "into", "geed", "pave", "awls", "cent", "cunt", "full", "dint", "hank", "mate", "coin", "tars", "scud", "veer", "coax", "bops", "uris", "loom", "shod", "crib", "lids", "drys", "fish", "edit", "dick", "erna", "else", "hahs", "alga", "moho", "wire", "fora", "tums", "ruth", "bets", "duns", "mold", "mush", "swop", "ruby", "bolt", "nave", "kite", "ahem", "brad", "tern", "nips", "whew", "bait", "ooze", "gino", "yuck", "drum", "shoe", "lobe", "dusk", "cult", "paws", "anew", "dado", "nook", "half", "lams", "rich", "cato", "java", "kemp", "vain", "fees", "sham", "auks", "gish", "fire", "elam", "salt", "sour", "loth", "whit", "yogi", "shes", "scam", "yous", "lucy", "inez", "geld", "whig", "thee", "kelp", "loaf", "harm", "tomb", "ever", "airs", "page", "laud", "stun", "paid", "goop", "cobs", "judy", "grab", "doha", "crew", "item", "fogs", "tong", "blip", "vest", "bran", "wend", "bawl", "feel", "jets", "mixt", "tell", "dire", "devi", "milo", "deng", "yews", "weak", "mark", "doug", "fare", "rigs", "poke", "hies", "sian", "suez", "quip", "kens", "lass", "zips", "elva", "brat", "cosy", "teri", "hull", "spun", "russ", "pupa", "weed", "pulp", "main", "grim", "hone", "cord", "barf", "olav", "gaps", "rote", "wilt", "lars", "roll", "balm", "jana", "give", "eire", "faun", "suck", "kegs", "nita", "weer", "tush", "spry", "loge", "nays", "heir", "dope", "roar", "peep", "nags", "ates", "bane", "seas", "sign", "fred", "they", "lien", "kiev", "fops", "said", "lawn", "lind", "miff", "mass", "trig", "sins", "furl", "ruin", "sent", "cray", "maya", "clog", "puns", "silk", "axis", "grog", "jots", "dyer", "mope", "rand", "vend", "keen", "chou", "dose", "rain", "eats", "sped", "maui", "evan", "time", "todd", "skit", "lief", "sops", "outs", "moot", "faze", "biro", "gook", "fill", "oval", "skew", "veil", "born", "slob", "hyde", "twin", "eloy", "beat", "ergs", "sure", "kobe", "eggo", "hens", "jive", "flax", "mons", "dunk", "yest", "begs", "dial", "lodz", "burp", "pile", "much", "dock", "rene", "sago", "racy", "have", "yalu", "glow", "move", "peps", "hods", "kins", "salk", "hand", "cons", "dare", "myra", "sega", "type", "mari", "pelt", "hula", "gulf", "jugs", "flay", "fest", "spat", "toms", "zeno", "taps", "deny", "swag", "afro", "baud", "jabs", "smut", "egos", "lara", "toes", "song", "fray", "luis", "brut", "olen", "mere", "ruff", "slum", "glad", "buds", "silt", "rued", "gelt", "hive", "teem", "ides", "sink", "ands", "wisp", "omen", "lyre", "yuks", "curb", "loam", "darn", "liar", "pugs", "pane", "carl", "sang", "scar", "zeds", "claw", "berg", "hits", "mile", "lite", "khan", "erik", "slug", "loon", "dena", "ruse", "talk", "tusk", "gaol", "tads", "beds", "sock", "howe", "gave", "snob", "ahab", "part", "meir", "jell", "stir", "tels", "spit", "hash", "omit", "jinx", "lyra", "puck", "laue", "beep", "eros", "owed", "cede", "brew", "slue", "mitt", "jest", "lynx", "wads", "gena", "dank", "volt", "gray", "pony", "veld", "bask", "fens", "argo", "work", "taxi", "afar", "boon", "lube", "pass", "lazy", "mist", "blot", "mach", "poky", "rams", "sits", "rend", "dome", "pray", "duck", "hers", "lure", "keep", "gory", "chat", "runt", "jams", "lays", "posy", "bats", "hoff", "rock", "keri", "raul", "yves", "lama", "ramp", "vote", "jody", "pock", "gist", "sass", "iago", "coos", "rank", "lowe", "vows", "koch", "taco", "jinn", "juno", "rape", "band", "aces", "goal", "huck", "lila", "tuft", "swan", "blab", "leda", "gems", "hide", "tack", "porn", "scum", "frat", "plum", "duds", "shad", "arms", "pare", "chin", "gain", "knee", "foot", "line", "dove", "vera", "jays", "fund", "reno", "skid", "boys", "corn", "gwyn", "sash", "weld", "ruiz", "dior", "jess", "leaf", "pars", "cote", "zing", "scat", "nice", "dart", "only", "owls", "hike", "trey", "whys", "ding", "klan", "ross", "barb", "ants", "lean", "dopy", "hock", "tour", "grip", "aldo", "whim", "prom", "rear", "dins", "duff", "dell", "loch", "lava", "sung", "yank", "thar", "curl", "venn", "blow", "pomp", "heat", "trap", "dali", "nets", "seen", "gash", "twig", "dads", "emmy", "rhea", "navy", "haws", "mite", "bows", "alas", "ives", "play", "soon", "doll", "chum", "ajar", "foam", "call", "puke", "kris", "wily", "came", "ales", "reef", "raid", "diet", "prod", "prut", "loot", "soar", "coed", "celt", "seam", "dray", "lump", "jags", "nods", "sole", "kink", "peso", "howl", "cost", "tsar", "uric", "sore", "woes", "sewn", "sake", "cask", "caps", "burl", "tame", "bulk", "neva", "from", "meet", "webs", "spar", "fuck", "buoy", "wept", "west", "dual", "pica", "sold", "seed", "gads", "riff", "neck", "deed", "rudy", "drop", "vale", "flit", "romp", "peak", "jape", "jews", "fain", "dens", "hugo", "elba", "mink", "town", "clam", "feud", "fern", "dung", "newt", "mime", "deem", "inti", "gigs", "sosa", "lope", "lard", "cara", "smug", "lego", "flex", "doth", "paar", "moon", "wren", "tale", "kant", "eels", "muck", "toga", "zens", "lops", "duet", "coil", "gall", "teal", "glib", "muir", "ails", "boer", "them", "rake", "conn", "neat", "frog", "trip", "coma", "must", "mono", "lira", "craw", "sled", "wear", "toby", "reel", "hips", "nate", "pump", "mont", "died", "moss", "lair", "jibe", "oils", "pied", "hobs", "cads", "haze", "muse", "cogs", "figs", "cues", "roes", "whet", "boru", "cozy", "amos", "tans", "news", "hake", "cots", "boas", "tutu", "wavy", "pipe", "typo", "albs", "boom", "dyke", "wail", "woke", "ware", "rita", "fail", "slab", "owes", "jane", "rack", "hell", "lags", "mend", "mask", "hume", "wane", "acne", "team", "holy", "runs", "exes", "dole", "trim", "zola", "trek", "puma", "wacs", "veep", "yaps", "sums", "lush", "tubs", "most", "witt", "bong", "rule", "hear", "awry", "sots", "nils", "bash", "gasp", "inch", "pens", "fies", "juts", "pate", "vine", "zulu", "this", "bare", "veal", "josh", "reek", "ours", "cowl", "club", "farm", "teat", "coat", "dish", "fore", "weft", "exam", "vlad", "floe", "beak", "lane", "ella", "warp", "goth", "ming", "pits", "rent", "tito", "wish", "amps", "says", "hawk", "ways", "punk", "nark", "cagy", "east", "paul", "bose", "solo", "teed", "text", "hews", "snip", "lips", "emit", "orgy", "icon", "tuna", "soul", "kurd", "clod", "calk", "aunt", "bake", "copy", "acid", "duse", "kiln", "spec", "fans", "bani", "irma", "pads", "batu", "logo", "pack", "oder", "atop", "funk", "gide", "bede", "bibs", "taut", "guns", "dana", "puff", "lyme", "flat", "lake", "june", "sets", "gull", "hops", "earn", "clip", "fell", "kama", "seal", "diaz", "cite", "chew", "cuba", "bury", "yard", "bank", "byes", "apia", "cree", "nosh", "judo", "walk", "tape", "taro", "boot", "cods", "lade", "cong", "deft", "slim", "jeri", "rile", "park", "aeon", "fact", "slow", "goff", "cane", "earp", "tart", "does", "acts", "hope", "cant", "buts", "shin", "dude", "ergo", "mode", "gene", "lept", "chen", "beta", "eden", "pang", "saab", "fang", "whir", "cove", "perk", "fads", "rugs", "herb", "putt", "nous", "vane", "corm", "stay", "bids", "vela", "roof", "isms", "sics", "gone", "swum", "wiry", "cram", "rink", "pert", "heap", "sikh", "dais", "cell", "peel", "nuke", "buss", "rasp", "none", "slut", "bent", "dams", "serb", "dork", "bays", "kale", "cora", "wake", "welt", "rind", "trot", "sloe", "pity", "rout", "eves", "fats", "furs", "pogo", "beth", "hued", "edam", "iamb", "glee", "lute", "keel", "airy", "easy", "tire", "rube", "bogy", "sine", "chop", "rood", "elbe", "mike", "garb", "jill", "gaul", "chit", "dons", "bars", "ride", "beck", "toad", "make", "head", "suds", "pike", "snot", "swat", "peed", "same", "gaza", "lent", "gait", "gael", "elks", "hang", "nerf", "rosy", "shut", "glop", "pain", "dion", "deaf", "hero", "doer", "wost", "wage", "wash", "pats", "narc", "ions", "dice", "quay", "vied", "eons", "case", "pour", "urns", "reva", "rags", "aden", "bone", "rang", "aura", "iraq", "toot", "rome", "hals", "megs", "pond", "john", "yeps", "pawl", "warm", "bird", "tint", "jowl", "gibe", "come", "hold", "pail", "wipe", "bike", "rips", "eery", "kent", "hims", "inks", "fink", "mott", "ices", "macy", "serf", "keys", "tarp", "cops", "sods", "feet", "tear", "benz", "buys", "colo", "boil", "sews", "enos", "watt", "pull", "brag", "cork", "save", "mint", "feat", "jamb", "rubs", "roxy", "toys", "nosy", "yowl", "tamp", "lobs", "foul", "doom", "sown", "pigs", "hemp", "fame", "boor", "cube", "tops", "loco", "lads", "eyre", "alta", "aged", "flop", "pram", "lesa", "sawn", "plow", "aral", "load", "lied", "pled", "boob", "bert", "rows", "zits", "rick", "hint", "dido", "fist", "marc", "wuss", "node", "smog", "nora", "shim", "glut", "bale", "perl", "what", "tort", "meek", "brie", "bind", "cake", "psst", "dour", "jove", "tree", "chip", "stud", "thou", "mobs", "sows", "opts", "diva", "perm", "wise", "cuds", "sols", "alan", "mild", "pure", "gail", "wins", "offs", "nile", "yelp", "minn", "tors", "tran", "homy", "sadr", "erse", "nero", "scab", "finn", "mich", "turd", "then", "poem", "noun", "oxus", "brow", "door", "saws", "eben", "wart", "wand", "rosa", "left", "lina", "cabs", "rapt", "olin", "suet", "kalb", "mans", "dawn", "riel", "temp", "chug", "peal", "drew", "null", "hath", "many", "took", "fond", "gate", "sate", "leak", "zany", "vans", "mart", "hess", "home", "long", "dirk", "bile", "lace", "moog", "axes", "zone", "fork", "duct", "rico", "rife", "deep", "tiny", "hugh", "bilk", "waft", "swig", "pans", "with", "kern", "busy", "film", "lulu", "king", "lord", "veda", "tray", "legs", "soot", "ells", "wasp", "hunt", "earl", "ouch", "diem", "yell", "pegs", "blvd", "polk", "soda", "zorn", "liza", "slop", "week", "kill", "rusk", "eric", "sump", "haul", "rims", "crop", "blob", "face", "bins", "read", "care", "pele", "ritz", "beau", "golf", "drip", "dike", "stab", "jibs", "hove", "junk", "hoax", "tats", "fief", "quad", "peat", "ream", "hats", "root", "flak", "grit", "clap", "pugh", "bosh", "lock", "mute", "crow", "iced", "lisa", "bela", "fems", "oxes", "vies", "gybe", "huff", "bull", "cuss", "sunk", "pups", "fobs", "turf", "sect", "atom", "debt", "sane", "writ", "anon", "mayo", "aria", "seer", "thor", "brim", "gawk", "jack", "jazz", "menu", "yolk", "surf", "libs", "lets", "bans", "toil", "open", "aced", "poor", "mess", "wham", "fran", "gina", "dote", "love", "mood", "pale", "reps", "ines", "shot", "alar", "twit", "site", "dill", "yoga", "sear", "vamp", "abel", "lieu", "cuff", "orbs", "rose", "tank", "gape", "guam", "adar", "vole", "your", "dean", "dear", "hebe", "crab", "hump", "mole", "vase", "rode", "dash", "sera", "balk", "lela", "inca", "gaea", "bush", "loud", "pies", "aide", "blew", "mien", "side", "kerr", "ring", "tess", "prep", "rant", "lugs", "hobo", "joke", "odds", "yule", "aida", "true", "pone", "lode", "nona", "weep", "coda", "elmo", "skim", "wink", "bras", "pier", "bung", "pets", "tabs", "ryan", "jock", "body", "sofa", "joey", "zion", "mace", "kick", "vile", "leno", "bali", "fart", "that", "redo", "ills", "jogs", "pent", "drub", "slaw", "tide", "lena", "seep", "gyps", "wave", "amid", "fear", "ties", "flan", "wimp", "kali", "shun", "crap", "sage", "rune", "logs", "cain", "digs", "abut", "obit", "paps", "rids", "fair", "hack", "huns", "road", "caws", "curt", "jute", "fisk", "fowl", "duty", "holt", "miss", "rude", "vito", "baal", "ural", "mann", "mind", "belt", "clem", "last", "musk", "roam", "abed", "days", "bore", "fuze", "fall", "pict", "dump", "dies", "fiat", "vent", "pork", "eyed", "docs", "rive", "spas", "rope", "ariz", "tout", "game", "jump", "blur", "anti", "lisp", "turn", "sand", "food", "moos", "hoop", "saul", "arch", "fury", "rise", "diss", "hubs", "burs", "grid", "ilks", "suns", "flea", "soil", "lung", "want", "nola", "fins", "thud", "kidd", "juan", "heps", "nape", "rash", "burt", "bump", "tots", "brit", "mums", "bole", "shah", "tees", "skip", "limb", "umps", "ache", "arcs", "raft", "halo", "luce", "bahs", "leta", "conk", "duos", "siva", "went", "peek", "sulk", "reap", "free", "dubs", "lang", "toto", "hasp", "ball", "rats", "nair", "myst", "wang", "snug", "nash", "laos", "ante", "opal", "tina", "pore", "bite", "haas", "myth", "yugo", "foci", "dent", "bade", "pear", "mods", "auto", "shop", "etch", "lyly", "curs", "aron", "slew", "tyro", "sack", "wade", "clio", "gyro", "butt", "icky", "char", "itch", "halt", "gals", "yang", "tend", "pact", "bees", "suit", "puny", "hows", "nina", "brno", "oops", "lick", "sons", "kilo", "bust", "nome", "mona", "dull", "join", "hour", "papa", "stag", "bern", "wove", "lull", "slip", "laze", "roil", "alto", "bath", "buck", "alma", "anus", "evil", "dumb", "oreo", "rare", "near", "cure", "isis", "hill", "kyle", "pace", "comb", "nits", "flip", "clop", "mort", "thea", "wall", "kiel", "judd", "coop", "dave", "very", "amie", "blah", "flub", "talc", "bold", "fogy", "idea", "prof", "horn", "shoo", "aped", "pins", "helm", "wees", "beer", "womb", "clue", "alba", "aloe", "fine", "bard", "limo", "shaw", "pint", "swim", "dust", "indy", "hale", "cats", "troy", "wens", "luke", "vern", "deli", "both", "brig", "daub", "sara", "sued", "bier", "noel", "olga", "dupe", "look", "pisa", "knox", "murk", "dame", "matt", "gold", "jame", "toge", "luck", "peck", "tass", "calf", "pill", "wore", "wadi", "thur", "parr", "maul", "tzar", "ones", "lees", "dark", "fake", "bast", "zoom", "here", "moro", "wine", "bums", "cows", "jean", "palm", "fume", "plop", "help", "tuba", "leap", "cans", "back", "avid", "lice", "lust", "polo", "dory", "stew", "kate", "rama", "coke", "bled", "mugs", "ajax", "arts", "drug", "pena", "cody", "hole", "sean", "deck", "guts", "kong", "bate", "pitt", "como", "lyle", "siam", "rook", "baby", "jigs", "bret", "bark", "lori", "reba", "sups", "made", "buzz", "gnaw", "alps", "clay", "post", "viol", "dina", "card", "lana", "doff", "yups", "tons", "live", "kids", "pair", "yawl", "name", "oven", "sirs", "gyms", "prig", "down", "leos", "noon", "nibs", "cook", "safe", "cobb", "raja", "awes", "sari", "nerd", "fold", "lots", "pete", "deal", "bias", "zeal", "girl", "rage", "cool", "gout", "whey", "soak", "thaw", "bear", "wing", "nagy", "well", "oink", "sven", "kurt", "etna", "held", "wood", "high", "feta", "twee", "ford", "cave", "knot", "tory", "ibis", "yaks", "vets", "foxy", "sank", "cone", "pius", "tall", "seem", "wool", "flap", "gird", "lore", "coot", "mewl", "sere", "real", "puts", "sell", "nuts", "foil", "lilt", "saga", "heft", "dyed", "goat", "spew", "daze", "frye", "adds", "glen", "tojo", "pixy", "gobi", "stop", "tile", "hiss", "shed", "hahn", "baku", "ahas", "sill", "swap", "also", "carr", "manx", "lime", "debs", "moat", "eked", "bola", "pods", "coon", "lacy", "tube", "minx", "buff", "pres", "clew", "gaff", "flee", "burn", "whom", "cola", "fret", "purl", "wick", "wigs", "donn", "guys", "toni", "oxen", "wite", "vial", "spam", "huts", "vats", "lima", "core", "eula", "thad", "peon", "erie", "oats", "boyd", "cued", "olaf", "tams", "secs", "urey", "wile", "penn", "bred", "rill", "vary", "sues", "mail", "feds", "aves", "code", "beam", "reed", "neil", "hark", "pols", "gris", "gods", "mesa", "test", "coup", "heed", "dora", "hied", "tune", "doze", "pews", "oaks", "bloc", "tips", "maid", "goof", "four", "woof", "silo", "bray", "zest", "kiss", "yong", "file", "hilt", "iris", "tuns", "lily", "ears", "pant", "jury", "taft", "data", "gild", "pick", "kook", "colt", "bohr", "anal", "asps", "babe", "bach", "mash", "biko", "bowl", "huey", "jilt", "goes", "guff", "bend", "nike", "tami", "gosh", "tike", "gees", "urge", "path", "bony", "jude", "lynn", "lois", "teas", "dunn", "elul", "bonn", "moms", "bugs", "slay", "yeah", "loan", "hulk", "lows", "damn", "nell", "jung", "avis", "mane", "waco", "loin", "knob", "tyke", "anna", "hire", "luau", "tidy", "nuns", "pots", "quid", "exec", "hans", "hera", "hush", "shag", "scot", "moan", "wald", "ursa", "lorn", "hunk", "loft", "yore", "alum", "mows", "slog", "emma", "spud", "rice", "worn", "erma", "need", "bags", "lark", "kirk", "pooh", "dyes", "area", "dime", "luvs", "foch", "refs", "cast", "alit", "tugs", "even", "role", "toed", "caph", "nigh", "sony", "bide", "robs", "folk", "daft", "past", "blue", "flaw", "sana", "fits", "barr", "riot", "dots", "lamp", "cock", "fibs", "harp", "tent", "hate", "mali", "togs", "gear", "tues", "bass", "pros", "numb", "emus", "hare", "fate", "wife", "mean", "pink", "dune", "ares", "dine", "oily", "tony", "czar", "spay", "push", "glum", "till", "moth", "glue", "dive", "scad", "pops", "woks", "andy", "leah", "cusp", "hair", "alex", "vibe", "bulb", "boll", "firm", "joys", "tara", "cole", "levy", "owen", "chow", "rump", "jail", "lapp", "beet", "slap", "kith", "more", "maps", "bond", "hick", "opus", "rust", "wist", "shat", "phil", "snow", "lott", "lora", "cary", "mote", "rift", "oust", "klee", "goad", "pith", "heep", "lupe", "ivan", "mimi", "bald", "fuse", "cuts", "lens", "leer", "eyry", "know", "razz", "tare", "pals", "geek", "greg", "teen", "clef", "wags", "weal", "each", "haft", "nova", "waif", "rate", "katy", "yale", "dale", "leas", "axum", "quiz", "pawn", "fend", "capt", "laws", "city", "chad", "coal", "nail", "zaps", "sort", "loci", "less", "spur", "note", "foes", "fags", "gulp", "snap", "bogs", "wrap", "dane", "melt", "ease", "felt", "shea", "calm", "star", "swam", "aery", "year", "plan", "odin", "curd", "mira", "mops", "shit", "davy", "apes", "inky", "hues", "lome", "bits", "vila", "show", "best", "mice", "gins", "next", "roan", "ymir", "mars", "oman", "wild", "heal", "plus", "erin", "rave", "robe", "fast", "hutu", "aver", "jodi", "alms", "yams", "zero", "revs", "wean", "chic", "self", "jeep", "jobs", "waxy", "duel", "seek", "spot", "raps", "pimp", "adan", "slam", "tool", "morn", "futz", "ewes", "errs", "knit", "rung", "kans", "muff", "huhs", "tows", "lest", "meal", "azov", "gnus", "agar", "sips", "sway", "otis", "tone", "tate", "epic", "trio", "tics", "fade", "lear", "owns", "robt", "weds", "five", "lyon", "terr", "arno", "mama", "grey", "disk", "sept", "sire", "bart", "saps", "whoa", "turk", "stow", "pyle", "joni", "zinc", "negs", "task", "leif", "ribs", "malt", "nine", "bunt", "grin", "dona", "nope", "hams", "some", "molt", "smit", "sacs", "joan", "slav", "lady", "base", "heck", "list", "take", "herd", "will", "nubs", "burg", "hugs", "peru", "coif", "zoos", "nick", "idol", "levi", "grub", "roth", "adam", "elma", "tags", "tote", "yaws", "cali", "mete", "lula", "cubs", "prim", "luna", "jolt", "span", "pita", "dodo", "puss", "deer", "term", "dolt", "goon", "gary", "yarn", "aims", "just", "rena", "tine", "cyst", "meld", "loki", "wong", "were", "hung", "maze", "arid", "cars", "wolf", "marx", "faye", "eave", "raga", "flow", "neal", "lone", "anne", "cage", "tied", "tilt", "soto", "opel", "date", "buns", "dorm", "kane", "akin", "ewer", "drab", "thai", "jeer", "grad", "berm", "rods", "saki", "grus", "vast", "late", "lint", "mule", "risk", "labs", "snit", "gala", "find", "spin", "ired", "slot", "oafs", "lies", "mews", "wino", "milk", "bout", "onus", "tram", "jaws", "peas", "cleo", "seat", "gums", "cold", "vang", "dewy", "hood", "rush", "mack", "yuan", "odes", "boos", "jami", "mare", "plot", "swab", "borg", "hays", "form", "mesh", "mani", "fife", "good", "gram", "lion", "myna", "moor", "skin", "posh", "burr", "rime", "done", "ruts", "pays", "stem", "ting", "arty", "slag", "iron", "ayes", "stub", "oral", "gets", "chid", "yens", "snub", "ages", "wide", "bail", "verb", "lamb", "bomb", "army", "yoke", "gels", "tits", "bork", "mils", "nary", "barn", "hype", "odom", "avon", "hewn", "rios", "cams", "tact", "boss", "oleo", "duke", "eris", "gwen", "elms", "deon", "sims", "quit", "nest", "font", "dues", "yeas", "zeta", "bevy", "gent", "torn", "cups", "worm", "baum", "axon", "purr", "vise", "grew", "govs", "meat", "chef", "rest", "lame"]));
  });

  it.skip('test_getValidNeighbors', () => {
    let s = new DSAService();
    console.log(s.findWords([["o", "a", "a", "n"], ["e", "t", "a", "e"], ["i", "h", "k", "r"], ["i", "f", "l", "v"]], ["oath", "pea", "eat", "rain"]));
    console.log(s.findWords([["a", "b"], ["c", "d"]], ["abcb"]));
    console.log(s.findWords([["o", "a", "b", "n"], ["o", "t", "a", "e"], ["a", "h", "k", "r"], ["a", "f", "l", "v"]], ["oa", "oaa"]));
    console.log(s.findWords([["a", "a"]], ["aa"]));
    console.log(s.findWords([["a", "b", "c"], ["a", "e", "d"], ["a", "f", "g"]], ["abcdefg", "gfedcbaaa", "eaabcdgfa", "befa", "dgc", "ade"]));
    console.log(s.findWords([["b", "a", "b", "a", "b", "a", "b", "a", "b", "a"], ["a", "b", "a", "b", "a", "b", "a", "b", "a", "b"], ["b", "a", "b", "a", "b", "a", "b", "a", "b", "a"], ["a", "b", "a", "b", "a", "b", "a", "b", "a", "b"], ["b", "a", "b", "a", "b", "a", "b", "a", "b", "a"], ["a", "b", "a", "b", "a", "b", "a", "b", "a", "b"], ["b", "a", "b", "a", "b", "a", "b", "a", "b", "a"], ["a", "b", "a", "b", "a", "b", "a", "b", "a", "b"], ["b", "a", "b", "a", "b", "a", "b", "a", "b", "a"], ["a", "b", "a", "b", "a", "b", "a", "b", "a", "b"]], ["ababababaa", "ababababab", "ababababac", "ababababad", "ababababae", "ababababaf", "ababababag", "ababababah", "ababababai", "ababababaj", "ababababak", "ababababal", "ababababam", "ababababan", "ababababao", "ababababap", "ababababaq", "ababababar", "ababababas", "ababababat", "ababababau", "ababababav", "ababababaw", "ababababax", "ababababay", "ababababaz", "ababababba", "ababababbb", "ababababbc", "ababababbd", "ababababbe", "ababababbf", "ababababbg", "ababababbh", "ababababbi", "ababababbj", "ababababbk", "ababababbl", "ababababbm", "ababababbn", "ababababbo", "ababababbp", "ababababbq", "ababababbr", "ababababbs", "ababababbt", "ababababbu", "ababababbv", "ababababbw", "ababababbx", "ababababby", "ababababbz", "ababababca", "ababababcb", "ababababcc", "ababababcd", "ababababce", "ababababcf", "ababababcg", "ababababch", "ababababci", "ababababcj", "ababababck", "ababababcl", "ababababcm", "ababababcn", "ababababco", "ababababcp", "ababababcq", "ababababcr", "ababababcs", "ababababct", "ababababcu", "ababababcv", "ababababcw", "ababababcx", "ababababcy", "ababababcz", "ababababda", "ababababdb", "ababababdc", "ababababdd", "ababababde", "ababababdf", "ababababdg", "ababababdh", "ababababdi", "ababababdj", "ababababdk", "ababababdl", "ababababdm", "ababababdn", "ababababdo", "ababababdp", "ababababdq", "ababababdr", "ababababds", "ababababdt", "ababababdu", "ababababdv", "ababababdw", "ababababdx", "ababababdy", "ababababdz", "ababababea", "ababababeb", "ababababec", "ababababed", "ababababee", "ababababef", "ababababeg", "ababababeh", "ababababei", "ababababej", "ababababek", "ababababel", "ababababem", "ababababen", "ababababeo", "ababababep", "ababababeq", "ababababer", "ababababes", "ababababet", "ababababeu", "ababababev", "ababababew", "ababababex", "ababababey", "ababababez", "ababababfa", "ababababfb", "ababababfc", "ababababfd", "ababababfe", "ababababff", "ababababfg", "ababababfh", "ababababfi", "ababababfj", "ababababfk", "ababababfl", "ababababfm", "ababababfn", "ababababfo", "ababababfp", "ababababfq", "ababababfr", "ababababfs", "ababababft", "ababababfu", "ababababfv", "ababababfw", "ababababfx", "ababababfy", "ababababfz", "ababababga", "ababababgb", "ababababgc", "ababababgd", "ababababge", "ababababgf", "ababababgg", "ababababgh", "ababababgi", "ababababgj", "ababababgk", "ababababgl", "ababababgm", "ababababgn", "ababababgo", "ababababgp", "ababababgq", "ababababgr", "ababababgs", "ababababgt", "ababababgu", "ababababgv", "ababababgw", "ababababgx", "ababababgy", "ababababgz", "ababababha", "ababababhb", "ababababhc", "ababababhd", "ababababhe", "ababababhf", "ababababhg", "ababababhh", "ababababhi", "ababababhj", "ababababhk", "ababababhl", "ababababhm", "ababababhn", "ababababho", "ababababhp", "ababababhq", "ababababhr", "ababababhs", "ababababht", "ababababhu", "ababababhv", "ababababhw", "ababababhx", "ababababhy", "ababababhz", "ababababia", "ababababib", "ababababic", "ababababid", "ababababie", "ababababif", "ababababig", "ababababih", "ababababii", "ababababij", "ababababik", "ababababil", "ababababim", "ababababin", "ababababio", "ababababip", "ababababiq", "ababababir", "ababababis", "ababababit", "ababababiu", "ababababiv", "ababababiw", "ababababix", "ababababiy", "ababababiz", "ababababja", "ababababjb", "ababababjc", "ababababjd", "ababababje", "ababababjf", "ababababjg", "ababababjh", "ababababji", "ababababjj", "ababababjk", "ababababjl", "ababababjm", "ababababjn", "ababababjo", "ababababjp", "ababababjq", "ababababjr", "ababababjs", "ababababjt", "ababababju", "ababababjv", "ababababjw", "ababababjx", "ababababjy", "ababababjz", "ababababka", "ababababkb", "ababababkc", "ababababkd", "ababababke", "ababababkf", "ababababkg", "ababababkh", "ababababki", "ababababkj", "ababababkk", "ababababkl", "ababababkm", "ababababkn", "ababababko", "ababababkp", "ababababkq", "ababababkr", "ababababks", "ababababkt", "ababababku", "ababababkv", "ababababkw", "ababababkx", "ababababky", "ababababkz", "ababababla", "abababablb", "abababablc", "ababababld", "abababable", "abababablf", "abababablg", "abababablh", "ababababli", "abababablj", "abababablk", "ababababll", "abababablm", "ababababln", "abababablo", "abababablp", "abababablq", "abababablr", "ababababls", "abababablt", "abababablu", "abababablv", "abababablw", "abababablx", "abababably", "abababablz", "ababababma", "ababababmb", "ababababmc", "ababababmd", "ababababme", "ababababmf", "ababababmg", "ababababmh", "ababababmi", "ababababmj", "ababababmk", "ababababml", "ababababmm", "ababababmn", "ababababmo", "ababababmp", "ababababmq", "ababababmr", "ababababms", "ababababmt", "ababababmu", "ababababmv", "ababababmw", "ababababmx", "ababababmy", "ababababmz", "ababababna", "ababababnb", "ababababnc", "ababababnd", "ababababne", "ababababnf", "ababababng", "ababababnh", "ababababni", "ababababnj", "ababababnk", "ababababnl", "ababababnm", "ababababnn", "ababababno", "ababababnp", "ababababnq", "ababababnr", "ababababns", "ababababnt", "ababababnu", "ababababnv", "ababababnw", "ababababnx", "ababababny", "ababababnz", "ababababoa", "ababababob", "ababababoc", "ababababod", "ababababoe", "ababababof", "ababababog", "ababababoh", "ababababoi", "ababababoj", "ababababok", "ababababol", "ababababom", "ababababon", "ababababoo", "ababababop", "ababababoq", "ababababor", "ababababos", "ababababot", "ababababou", "ababababov", "ababababow", "ababababox", "ababababoy", "ababababoz", "ababababpa", "ababababpb", "ababababpc", "ababababpd", "ababababpe", "ababababpf", "ababababpg", "ababababph", "ababababpi", "ababababpj", "ababababpk", "ababababpl", "ababababpm", "ababababpn", "ababababpo", "ababababpp", "ababababpq", "ababababpr", "ababababps", "ababababpt", "ababababpu", "ababababpv", "ababababpw", "ababababpx", "ababababpy", "ababababpz", "ababababqa", "ababababqb", "ababababqc", "ababababqd", "ababababqe", "ababababqf", "ababababqg", "ababababqh", "ababababqi", "ababababqj", "ababababqk", "ababababql", "ababababqm", "ababababqn", "ababababqo", "ababababqp", "ababababqq", "ababababqr", "ababababqs", "ababababqt", "ababababqu", "ababababqv", "ababababqw", "ababababqx", "ababababqy", "ababababqz", "ababababra", "ababababrb", "ababababrc", "ababababrd", "ababababre", "ababababrf", "ababababrg", "ababababrh", "ababababri", "ababababrj", "ababababrk", "ababababrl", "ababababrm", "ababababrn", "ababababro", "ababababrp", "ababababrq", "ababababrr", "ababababrs", "ababababrt", "ababababru", "ababababrv", "ababababrw", "ababababrx", "ababababry", "ababababrz", "ababababsa", "ababababsb", "ababababsc", "ababababsd", "ababababse", "ababababsf", "ababababsg", "ababababsh", "ababababsi", "ababababsj", "ababababsk", "ababababsl", "ababababsm", "ababababsn", "ababababso", "ababababsp", "ababababsq", "ababababsr", "ababababss", "ababababst", "ababababsu", "ababababsv", "ababababsw", "ababababsx", "ababababsy", "ababababsz", "ababababta", "ababababtb", "ababababtc", "ababababtd", "ababababte", "ababababtf", "ababababtg", "ababababth", "ababababti", "ababababtj", "ababababtk", "ababababtl", "ababababtm", "ababababtn", "ababababto", "ababababtp", "ababababtq", "ababababtr", "ababababts", "ababababtt", "ababababtu", "ababababtv", "ababababtw", "ababababtx", "ababababty", "ababababtz", "ababababua", "ababababub", "ababababuc", "ababababud", "ababababue", "ababababuf", "ababababug", "ababababuh", "ababababui", "ababababuj", "ababababuk", "ababababul", "ababababum", "ababababun", "ababababuo", "ababababup", "ababababuq", "ababababur", "ababababus", "ababababut", "ababababuu", "ababababuv", "ababababuw", "ababababux", "ababababuy", "ababababuz", "ababababva", "ababababvb", "ababababvc", "ababababvd", "ababababve", "ababababvf", "ababababvg", "ababababvh", "ababababvi", "ababababvj", "ababababvk", "ababababvl", "ababababvm", "ababababvn", "ababababvo", "ababababvp", "ababababvq", "ababababvr", "ababababvs", "ababababvt", "ababababvu", "ababababvv", "ababababvw", "ababababvx", "ababababvy", "ababababvz", "ababababwa", "ababababwb", "ababababwc", "ababababwd", "ababababwe", "ababababwf", "ababababwg", "ababababwh", "ababababwi", "ababababwj", "ababababwk", "ababababwl", "ababababwm", "ababababwn", "ababababwo", "ababababwp", "ababababwq", "ababababwr", "ababababws", "ababababwt", "ababababwu", "ababababwv", "ababababww", "ababababwx", "ababababwy", "ababababwz", "ababababxa", "ababababxb", "ababababxc", "ababababxd", "ababababxe", "ababababxf", "ababababxg", "ababababxh", "ababababxi", "ababababxj", "ababababxk", "ababababxl", "ababababxm", "ababababxn", "ababababxo", "ababababxp", "ababababxq", "ababababxr", "ababababxs", "ababababxt", "ababababxu", "ababababxv", "ababababxw", "ababababxx", "ababababxy", "ababababxz", "ababababya", "ababababyb", "ababababyc", "ababababyd", "ababababye", "ababababyf", "ababababyg", "ababababyh", "ababababyi", "ababababyj", "ababababyk", "ababababyl", "ababababym", "ababababyn", "ababababyo", "ababababyp", "ababababyq", "ababababyr", "ababababys", "ababababyt", "ababababyu", "ababababyv", "ababababyw", "ababababyx", "ababababyy", "ababababyz", "ababababza", "ababababzb", "ababababzc", "ababababzd", "ababababze", "ababababzf", "ababababzg", "ababababzh", "ababababzi", "ababababzj", "ababababzk", "ababababzl", "ababababzm", "ababababzn", "ababababzo", "ababababzp", "ababababzq", "ababababzr", "ababababzs", "ababababzt", "ababababzu", "ababababzv", "ababababzw", "ababababzx", "ababababzy", "ababababzz"]));
  });

  it.skip('test_merge', () => {
    let s = new DSAService();
    let source = [10, 12, 13, 0, 0, 0]
    s.merge(source, 3, [2, 5, 6], 3);
    console.log(source);
  });

  it.skip('test_rotate', () => {
    let s = new DSAService();
    let source = [-1, -100, 3, 99];
    s.rotate(source, 2);
    console.log(source);
  });

  it.skip('test_binsearch', () => {
    let s = new DSAService();
    console.log(s.searchMatrix([[1, 3, 5, 7], [10, 11, 16, 20], [23, 30, 34, 60]], 30));
  });

  it.skip('test_nQueen', () => {
    let s = new DSAService();
    console.log(s.totalQueens(8));
  });

  it.skip('test_mergeKLists', () => {
    let l1 = new LinkList([1, 4, 5]);
    let l2 = new LinkList([1, 3, 4]);
    let l3 = new LinkList([2, 6]);
    let lists = [l1.head, l2.head, l3.head];
    let ptr = LinkList.mergeKLists(lists);
    while (ptr != null) {
      console.log(ptr.val);
      ptr = ptr.next;
    }
  });

  it.skip('test_findsecretword', () => {
    let s = new DSAService();
    let m = new Master();
    let source = ["acckzz", "ccbazz", "eiowzz", "abcczz"];
    m.putSecret('acckzz');
    console.log(s.findSecretWord(source, m));
  });

  it.skip('test_findItenary', () => {
    let s = new DSAService();
    // console.log(s.findItinerary([["MUC", "LHR"], ["JFK", "MUC"], ["SFO", "SJC"], ["LHR", "SFO"]]));
    // console.log(s.findItinerary([["JFK", "SFO"], ["JFK", "ATL"], ["SFO", "ATL"], ["ATL", "JFK"], ["ATL", "SFO"]]));
    // console.log(s.findItinerary([["JFK", "KUL"], ["JFK", "NRT"], ["NRT", "JFK"]]));
    console.log(s.findItinerary([["EZE", "TIA"], ["EZE", "HBA"], ["AXA", "TIA"], ["JFK", "AXA"], ["ANU", "JFK"], ["ADL", "ANU"], ["TIA", "AUA"], ["ANU", "AUA"], ["ADL", "EZE"], ["ADL", "EZE"], ["EZE", "ADL"], ["AXA", "EZE"], ["AUA", "AXA"], ["JFK", "AXA"], ["AXA", "AUA"], ["AUA", "ADL"], ["ANU", "EZE"], ["TIA", "ADL"], ["EZE", "ANU"], ["AUA", "ANU"]]));
  });

  it.skip('test_isMatch', () => {
    let s = new DSAService();
    // console.log(s.isMatch('abcdfghefacbceeghef', 'abc*ef*ef'));
    // console.log(s.isMatch('aa', "a"));
    // console.log(s.isMatch('aa', "*"));
    // console.log(s.isMatch('cb', "?a"));
    // console.log(s.isMatch('aabcdef', "??b*e*"));
    // console.log(s.isMatch('mississippi', "m??*ss*?i*pi"));
    // console.log(s.isMatch('', "*****"));
    // console.log(s.isMatch('abcabczzzde', "*abc???de*"));
    console.log(s.isMatch('abbabaaabbabbaababbabbbbbabbbabbbabaaaaababababbbabababaabbababaabbbbbbaaaabababbbaabbbbaabbbbababababbaabbaababaabbbababababbbbaaabbbbbabaaaabbababbbbaababaabbababbbbbababbbabaaaaaaaabbbbbaabaaababaaaabb', "**aa*****ba*a*bb**aa*ab****a*aaaaaa***a*aaaa**bbabb*b*b**aaaaaaaaa*a********ba*bbb***a*ba*bb*bb**a*b*bb"
    ));
  });

  it.skip('test_reverseVowels', () => {
    let s = new DSAService();
    // console.log(s.reverseVowels('hello'));
    // console.log(s.reverseVowels('leetcode'));
    console.log(s.reverseVowels('.a'));
  });

  it.skip('test_pivotIndex', () => {
    let s = new DSAService();
    console.log(s.pivotIndex([1, 7, 3, 6, 5, 6]));
    console.log(s.pivotIndex([1, 2, 3]));
    console.log(s.pivotIndex([2, 1, -1]));
    console.log(s.pivotIndex([-1, -1, -1, -1, -1, 0]));
  });

  it.skip('test_minCost', () => {
    let s = new DSAService();
    console.log(s.minCostClimbingStairs([10, 15, 20]));
    console.log(s.minCostClimbingStairs([1, 100, 1, 1, 1, 100, 1, 1, 100, 1]));
  });

  it.skip('test_tribonacci', () => {
    let s = new DSAService();
    console.log(s.tribonacci(4));
    console.log(s.tribonacci(33));
  });

  it.skip('test_zigzag', () => {
    let s = new DSAService();
    console.log(s.zigzagLevelOrder(new TreeNode(1, new TreeNode(2, new TreeNode(4, null, null), null), new TreeNode(3, null, new TreeNode(5, null, null)))));
  });

  it.skip('tst_maxSubArray', () => {
    let s = new DSAService();
    console.log(s.maxSubArray([-2, 1, -3, 4, -1, 2, 1, -5, 4]));
    console.log(s.maxSubArray([1]));
    console.log(s.maxSubArray([5, 4, -1, 7, 8]));
  });

  it.skip('tst_long', () => {
    let s = new DSAService();
    console.log(s.longestConsecutive([0, 3, 7, 2, 5, 8, 4, 6, 0, 1]));
  });

  it.skip('test_insert', () => {
    let s = new DSAService();
    // console.log(s.insert([[1, 2], [3, 5], [6, 7], [8, 10], [12, 16]], [4, 8]));
    // console.log(s.insert([[1, 3], [6, 9]], [2, 5]));
    console.log(s.insert([[1, 3]], [6, 9]));
    console.log(s.insert([], [6, 9]));
  });

  it.skip('tst_issametree', () => {
    let p = new TreeNode(1, new TreeNode(1, null, null), null);
    let q = new TreeNode(1, null, new TreeNode(1, null, null));
    console.log(BinaryTree.isSameTree(p, q));

    p = new TreeNode(1, new TreeNode(2, null, null), new TreeNode(3, null, null));
    q = new TreeNode(1, new TreeNode(2, null, null), new TreeNode(3, null, null));
    console.log(BinaryTree.isSameTree(p, q));
  });

  it.skip('test_coinChange', () => {
    let s = new DSAService();
    console.log(s.coinChange([1, 2, 5], 100));
    // console.log(s.coinChange([4, 5], 18));
    // console.log(s.coinChange([4, 5], 8));
    // console.log(s.coinChange([2], 1));
    // console.log(s.coinChange([1, 2, 5, 10], 18));
    // console.log(s.coinChange([2], 3));
    // console.log(s.coinChange([1], 0));
  });

  it.skip('test_mintotal', () => {
    let s = new DSAService();
    // console.log(s.minimumTotal([[2], [3, 4], [6, 5, 7], [4, 1, 8, 3]]));
    // console.log(s.minimumTotal([[-10]]));
    console.log(s.minimumTotal([[]]));
  });

  it.skip('test_minpathsum', () => {
    let s = new DSAService();
    console.log(s.minPathSum([[1, 3, 1], [1, 5, 1], [4, 2, 1]]));
    console.log(s.minPathSum([[1, 2, 3], [4, 5, 6]]));
  });

  it.skip('tst_uniquePath', () => {
    let s = new DSAService();
    // console.log(s.uniquePathsWithObstacles([[0, 0, 0], [0, 1, 0], [0, 0, 0]]));
    console.log(s.uniquePathsWithObstacles([[0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 0]]));
  });

  it.skip('test_longestPaliandrome', () => {
    let s = new DSAService();
    console.log(s.longestPalindrome('aaccaaa'));
    console.log(s.longestPalindrome('babad'));
    console.log(s.longestPalindrome('acbeebcaabbeebd'));
    console.log(s.longestPalindrome('cbbd'));
    console.log(s.longestPalindrome('ac'));
    console.log(s.longestPalindrome('aacabdkacaa'));
  });

  it.skip('test_groupAnagram', () => {
    let s = new DSAService();
    console.log(s.groupAnagrams(["eat", "tea", "tan", "ate", "nat", "bat"]));
    console.log(s.groupAnagrams(["e"]));
    console.log(s.groupAnagrams([""]));
  });

  it.skip('test_flatten', () => {
    let s
  });

  it.skip('test_minDistance', () => {
    let s = new DSAService();
    console.log(s.minDistance('horse', 'ros'));
    console.log(s.minDistance('intention', 'execution'));
    // console.log(s.minDistance('ros', 'horse'));
    // console.log(s.minDistance('', ''));
    console.log(s.minDistance('ab', 'bc'));
    console.log(s.minDistance('zoologicoarchaeologist', 'zoogeologist'));
  });

  it.skip('tst_knapsack', () => {
    let s = new DSAService();
    console.log(s.knapsack([468, 335, 501, 170, 725, 479, 359, 963, 465, 706, 146, 282, 828, 962, 492, 996, 943, 828, 437, 392, 605, 903, 154, 293, 383, 422, 717, 719, 896, 448, 727, 772, 539, 870, 913, 668, 300, 36, 895, 704, 812, 323], [4, 4, 5, 2, 2, 4, 9, 8, 5, 3, 8, 8, 10, 4, 2, 10, 9, 7, 6, 1, 3, 9, 7, 1, 3, 5, 9, 7, 6, 1, 10, 1, 1, 7, 2, 4, 9, 10, 4, 5, 5, 7], 841));
  });

  it.skip('test_wordBreak', () => {
    let s = new DSAService();
    // console.log(s.wordBreak('applepenapple', ["apple", "pen"]));
    console.log(s.wordBreak('catsandogcat', ["cats", "dog", "sand", "and", "cat", "an"]));
    // console.log(s.wordBreak('abcd', ["a", "abc", "b", "cd"]));
  });

  it.skip('test_longestSS', () => {
    let s = new DSAService();
    console.log(s.lengthOfLIS([10, 9, 2, 5, 3, 7, 101, 18]));
    console.log(s.lengthOfLIS([0, 1, 0, 3, 2, 3]));
    console.log(s.lengthOfLIS([7, 7, 7, 7, 7, 7, 7]));
  });

  it.skip('test_maxProfit2', () => {
    let s = new DSAService();
    console.log(s.maxProfit2([3, 3, 5, 0, 0, 3, 1, 4]))
    console.log(s.maxProfit2(([7, 6, 4, 3, 1])));
    console.log(s.maxProfit2(([14, 9, 10, 12, 4, 8, 1, 16])));
  });

  it.skip('tst_mergesort', () => {
    let s = new DSAService();
    console.log(s.mergeSort([-1, 10, 9, 1, 2, 4, 3, 6]));
  });

  it.skip('test_levelorder', () => {
    let t = new TreeNode(3, new TreeNode(9, null, null), new TreeNode(20, new TreeNode(15, null, null), new TreeNode(7, null, null)));
    console.log(BinaryTree.levelOrder(t));
  });

  it.skip('test_inpre', () => {
    console.log(BinaryTree.buildTree([3, 9, 20, 15, 7], [9, 3, 15, 20, 7]));
  });

  it.skip('test_inpost', () => {
    console.log(BinaryTree.buildTree2([9, 3, 15, 20, 7], [9, 15, 7, 20, 3]));
  });

  it.skip('test_bstiterator', () => {
    let bst = new TreeNode(7, new TreeNode(3, null, null), new TreeNode(15, new TreeNode(9, null, null), new TreeNode(20, null, null)));
    let c = new BSTIterator(bst);
    console.log(c.next());
    console.log(c.next());
    console.log(c.hasNext());
    console.log(c.next());
    console.log(c.hasNext());
    console.log(c.next());
    console.log(c.hasNext());
    console.log(c.next());
    console.log(c.hasNext());
  });

  it.skip('test_numIslands', () => {
    let s = new DSAService();
    console.log(s.numIslands([
      ["1", "1", "1", "1", "0"],
      ["1", "1", "0", "1", "0"],
      ["1", "1", "0", "0", "0"],
      ["0", "0", "0", "0", "0"]
    ]));
    console.log(s.numIslands([
      ["1", "1", "0", "0", "0"],
      ["1", "1", "0", "0", "0"],
      ["0", "0", "1", "0", "0"],
      ["0", "0", "0", "1", "1"]
    ]));
  });

  it.skip('test_mqSqrt', () => {
    let s = new DSAService();
    // console.log(s.mySqrt(25));
    // console.log(s.mySqrt(4));
    console.log(s.mySqrt(8));
    // console.log(s.mySqrt(26));
  });

  it.skip('tst_findRelativeRanks', () => {
    let s = new DSAService();
    console.log(s.findRelativeRanks([5, 4, 3, 2, 1]));
    console.log(s.findRelativeRanks([10, 3, 8, 9, 4]));
  });

  it.skip('test_match2', () => {
    let s = new DSAService();
    // console.log(s.isMatch2("abbceddee", "a..*d*e"));
    // console.log(s.isMatch2("aa", "a"));
    // console.log(s.isMatch2("aa", "a*"));
    // console.log(s.isMatch2("ab", ".*"));
    // console.log(s.isMatch2("aab", "c*a*b"));
    // console.log(s.isMatch2("aaa", "ab*ac*a"));
    // console.log(s.isMatch2("a", "ab*"));
    console.log(s.isMatch2("bbbba", ".*a*a"));
  });

  it.skip('test_longestValidParentheses', () => {
    let s = new DSAService();
    console.log(s.longestValidParentheses(")()())"));
    console.log(s.longestValidParentheses("((())())"));
    console.log(s.longestValidParentheses("(()()(())"));
    console.log(s.longestValidParentheses("()(()"));

  });

  it.skip('test_firstMissingPositive', () => {
    let s = new DSAService();
    console.log(s.firstMissingPositive([1, 2, 0]));
    console.log(s.firstMissingPositive([3, 4, -1, 1]));
    console.log(s.firstMissingPositive([7, 8, 9, 11, 12]));
    console.log(s.firstMissingPositive([-4, -3, -2, -1, 1]));
  });

  it.skip('test_cyclicSort', () => {
    let s = new DSAService();
    let arr = [-1, 1, 1, 2, 4, 3, 4, 5, 4]
    s.cyclicSort(arr);
    console.log(arr);
  });

  it.skip('test_missingNumber2', () => {
    let s = new DSAService();
    let arr = [9, 6, 4, 2, 3, 5, 7, 0, 1];
    console.log(s.missingNumber2(arr));
  });

  it.skip('test_findduplicate', () => {
    let s = new DSAService();
    // console.log(s.findDuplicate([3, 3, 3, 3, 3]))
    // console.log(s.findDuplicate([1, 3, 4, 2, 2]))
    console.log(s.findDuplicate([3, 1, 3, 4, 2]))
  });

  it.skip('test_findDisapperaringNumbers', () => {
    let s = new DSAService();
    console.log(s.findDisappearedNumbers([4, 3, 2, 7, 8, 2, 3, 1]))
    console.log(s.findDisappearedNumbers([1, 1]))
  });

  it.skip('test_minSwapCouples', () => {
    let s = new DSAService();
    console.log(s.minSwapsCouples([0, 2, 1, 3]));
    console.log(s.minSwapsCouples([3, 7, 0, 1, 2, 4, 5, 6]));
    console.log(s.minSwapsCouples([3, 2, 0, 1]));
    console.log(s.minSwapsCouples([0, 2, 4, 6, 7, 1, 3, 5]));
  });

  it.skip('test_maxCount', () => {
    let s = new DSAService();
    // console.log(s.maxCount([1, 6, 5], 5, 6));
    // console.log(s.maxCount([1, 2, 3, 4, 5, 6, 7], 8, 1));
    console.log(s.maxCount([1249, 641, 3360, 2977, 1652, 982, 911, 87, 311, 899, 97, 662, 3112, 2047, 3025, 3423, 2086, 2300, 2799, 3107, 971, 2695, 2604, 1838, 783, 2410, 2525, 2855, 519, 274, 268, 1703, 111, 2319, 1761, 2216, 2923, 342, 418, 3124, 1885, 999, 1427, 2426, 3351, 2789, 3164, 3370, 3495, 3078, 1753, 20, 2121, 423, 771, 2770, 2812, 17, 327, 1448, 1563, 2752, 2614, 417, 1685, 1096, 2109, 1784, 2653, 1544, 3150, 2933, 816, 1024, 2613, 417, 13, 931, 3568, 132, 2481, 3017, 3443, 152, 2226, 658, 3220, 2394, 279, 3062, 2613, 1006, 36, 1724, 3233, 2577, 514, 2311, 3167, 3369, 789, 1432, 1062, 2653, 2194, 2003, 1647, 3068, 89, 702, 2930, 3422, 214, 940, 3377, 3202, 2200, 883, 3276, 3544, 2236, 2896, 2435, 3236, 2674, 3484, 3556, 3122, 1999, 3307, 3326, 484, 803, 238, 3247, 1589, 1159, 3624, 1875, 1265, 1535, 591, 1959, 253, 1707, 3209, 271, 3190, 529, 2784, 2814, 1153, 3123, 240, 18, 2008, 2689, 124, 2094, 871, 2925, 1128, 935, 1445, 1287, 2404, 2391, 3371, 1481, 2407, 1733, 2744, 3026, 3017, 3019, 244, 2489, 2822, 39, 1207, 630, 2681, 922, 800, 245, 2552, 1462, 3411, 1201, 627, 2135, 1649, 1463, 3527, 2694, 738, 2437, 269, 1479, 3604, 3097, 1139, 2686, 648, 240, 2938, 2665, 2218, 2017, 3170, 2765, 581, 1559, 1153, 1609, 2520, 2385, 2778, 535, 185, 2569, 3307, 1217, 1436, 774, 1046, 2692, 3127, 811, 2716, 1999, 1445, 640, 2827, 3106, 2160, 1805, 1863, 2402, 262, 670, 2174, 1793, 2888, 3189, 3625, 2892, 2798, 2706, 3498, 3082, 1071, 1946, 554, 2249, 1208, 1004, 2977, 907, 2747, 371, 2060, 3064, 2610, 1945, 2798, 3429, 2452, 902, 1975, 2647, 2520, 994, 3379, 1138, 3576, 2859, 2024, 927, 3387, 2696, 890, 2751, 2645, 3337, 1740, 125, 2842, 1725, 1114, 1740, 2499, 1867, 769, 3014, 3376, 323, 1290, 3417, 2747, 129, 1015, 143, 1836, 1718, 1383, 1533, 885, 3475, 2907, 3347, 2546, 1872, 33, 2426, 1710, 2012, 2720, 3071, 3212, 3096, 30, 2870, 3422, 905, 2990, 2995, 1548, 421, 372, 1717, 604, 839, 2091, 1290, 536, 1120, 1400, 2708, 868, 3376, 1082, 808, 2776, 438, 2406, 1130, 1036, 992, 3217, 284, 925, 604, 1648, 3621, 3555, 1497, 1121, 2931, 435, 2904, 1359, 3439, 2202, 1696, 2811, 3533, 2105, 1120, 2022, 2382, 1946, 2696, 129, 1311, 1980, 3532, 771, 2870, 2359, 2111, 121, 283, 2983, 1642, 2410, 1738, 154, 2302, 1453, 3475, 2012, 3539, 3316, 951, 1905, 3014, 1790, 477, 3294, 3457, 3311, 2867, 622, 574, 3179, 2212, 2415, 111, 800, 950, 821, 2678, 1338, 1703, 1730, 3603, 2280, 2494, 3094, 3549, 1364, 32, 1017, 2571, 2893, 1376, 3483, 2758, 1800, 503, 2936, 954, 153, 2593, 2137, 195, 635, 1904, 3431, 2008, 1087, 902, 1893, 1955, 2779, 713, 2693, 57, 2424, 2493, 3346, 2212, 2685, 2182, 1556, 679, 1046, 1950, 473, 2817, 1538, 2775, 1513, 1826, 698, 1923, 1665, 2579, 207, 512, 1137, 71, 191, 3185, 2801, 2860, 548, 295, 2484, 2581, 2522, 1232, 1758, 1231, 1837, 3362, 1493, 686, 2818, 370, 2947, 3060, 288, 3596, 3623, 1509, 491, 872, 2961, 2160, 3632, 754, 3232, 1752, 194, 1249, 1020, 3171, 363, 2382, 3117, 1641, 294, 3238, 1846, 3622, 3237, 3502, 1880, 2699, 1432, 2346, 1173, 1700, 1566, 2000, 409, 2503, 2575, 1928, 866, 1137, 987, 1156, 1764, 451, 2566, 635, 1551, 243, 2913, 1925, 500, 412, 674, 447, 3264, 1492, 3362, 2901, 965, 3370, 2688, 2553, 2609, 492, 1801, 3068, 3108, 3255, 3480, 3520, 1808, 780, 1341, 3520, 1603, 2415, 2973, 1449, 2496, 1345, 3139, 413, 1326, 1018, 2533, 3397, 3036, 2081, 2395, 3223, 1946, 1185, 949, 114, 221, 1809, 3586, 2607, 2507, 624, 1393, 871, 3355, 283, 2540, 505, 2883, 2325, 2161, 399, 3598, 783, 1439, 2593, 620, 2161, 1326, 4, 3299, 1273, 3017, 2799, 1895, 441, 1924, 543, 3574, 271, 1244, 3041, 3506, 2683, 2550, 2725, 816, 1846, 2880, 2537, 314, 704, 1306, 294, 2436, 499, 1201, 1142, 3044, 2737, 2869, 2889, 3633, 1365, 1637, 615, 222, 238, 1688, 3632, 90, 1659, 3315, 2696, 2719, 2385, 2514, 2962, 252, 2277, 3332, 787, 553, 1727, 1061, 1408, 2451, 564, 257, 2783, 2682, 1849, 2896, 259, 1274, 763, 1098, 1506, 1356, 2020, 1673, 2794, 2782, 333, 2084, 1362, 657, 233, 1393, 1660, 1792, 129, 3271, 2505, 3104, 3262, 838, 1752, 3522, 1604, 2936, 670, 3570, 2504, 2609, 3493, 136, 1997, 473, 1956, 1757, 1713, 676, 2618, 3556, 1645, 1881, 17, 1345, 934, 856, 1563, 2833, 1606, 2993, 3209, 3526, 1197, 1835, 144, 2230, 1582, 2389, 242, 3629, 3032, 2935, 1768, 3443, 3397, 434, 1250, 1570, 685, 1312, 1548, 965, 2978, 345, 2112, 2222, 3152, 412, 2091, 2440, 2648, 3282, 3224, 2424, 667, 1498, 2887, 3, 1278, 1439, 3096, 1292, 3069, 3044, 2140, 111, 3020, 362, 397, 388, 3574, 1403, 2327, 3585, 19, 1776, 2276, 1474, 3174, 2501, 595, 2820, 3626, 351, 3373, 106, 3141, 1549, 296, 1762, 3181, 454, 995, 2253, 597, 641, 1870, 981, 3145, 2733, 1243, 45, 2329, 2696, 3141, 1137, 565, 202, 104, 2446, 1876, 3570, 103, 33, 790, 2060, 1340, 2998, 1553, 2767, 2515, 360, 343, 1889, 20, 3069, 1571, 1341, 462, 1484, 3167, 1648, 491, 338, 1873, 2635, 3057, 3412, 1881, 3496, 2122, 2033, 1183, 920, 2185, 2320, 3508, 2720, 1676, 861, 738, 439, 1506, 380, 1671, 2250, 2322, 1654, 506, 1599, 1038, 1229, 2989, 2787, 3048, 2006, 2582, 2366, 3020, 1338, 2818, 778, 3547, 2415, 894, 3419, 2873, 1851, 2434, 1530, 2854, 475, 3131, 2161, 386, 211, 2520, 1559, 228, 1444, 1925, 927, 2871, 3175, 2947, 1108, 3463, 1027, 584, 1362, 1576, 3121, 480, 1270, 2389, 193, 3368, 3490, 589, 1301, 794, 756, 1346, 2338, 1246, 3077, 2557, 3610, 1190, 2285, 206, 1493, 285, 114, 442, 2797, 1678, 1679, 1069, 1662, 256, 368, 2599, 3092, 804, 2642, 871, 2361, 2590, 2900, 2748, 1913, 2566, 2287, 3431, 871, 1442, 548, 1256, 2970, 2724, 3350, 350, 3097, 3004, 2258, 940, 1763, 550, 1171, 1966, 1694, 374, 1919, 2482, 532, 1716, 830, 707, 2399, 279, 1332, 288, 2357, 2410, 2567, 2195, 2433, 3471, 2361, 2672, 1684, 2291, 1896, 697, 2208, 353, 1423, 3087, 3192, 3111, 506, 3601, 3159, 1993, 2826, 3575, 2546, 1953, 808, 425, 518, 292, 1640, 1215, 1560, 2064, 2469, 1350, 2079, 149, 2239, 2370, 3540, 665, 244, 456, 3410, 2623, 1501, 1931, 2966, 873, 2214, 1191, 2555, 3158, 1394, 672, 1271, 1822, 2854, 2687, 2595, 1310, 635, 2982, 2094, 705, 1518, 2883, 3149, 1336, 7, 437, 1851, 1404, 1279, 2781, 3625, 3120, 2896, 1805, 1820, 900, 1884, 105, 3526, 1683, 1823, 2344, 1241, 3247, 2942, 3187, 1539, 2656, 1275, 328, 3374, 2426, 3336, 2265, 1220, 1027, 2814, 354, 918, 3034, 3455, 3509, 2110, 650, 3525, 2872, 708, 1637, 2427, 3441, 3202, 2708, 2949, 331, 1453, 694, 1693, 2354, 2982, 3319, 1915, 2548, 259, 2434, 1382, 2519, 3262, 174, 3318, 373, 1791, 3312, 2253, 3348, 2121, 315, 2703, 1728, 526, 8, 146, 713, 1604, 3489, 681, 452, 2096, 2671, 1991, 75, 3592, 3196, 3276, 407, 3448, 99, 454, 1726, 562, 2924, 1733, 537, 969, 457, 835, 3177, 737, 1289, 1664, 1805, 1752, 968, 555, 3216, 2428, 1961, 954, 2738, 3285, 194, 2714, 1345, 2244, 208, 2320, 1221, 1013, 2895, 1417, 2849, 2401, 3017, 2022, 1275, 3393, 3029, 2498, 609, 732, 2679, 3227, 1023, 825, 299, 871, 732, 954, 3019, 2678, 2382, 74, 382, 1396, 2822, 3496, 1003, 252, 2613, 586, 3121, 1385, 991, 1372, 3456, 3100, 3347, 3402, 794, 1590, 805, 2971, 1701, 3352, 1170, 3013, 3588, 3185, 2674, 1006, 2662, 2384, 3482, 2679, 2539, 2332, 2310, 2815, 301, 1050, 1527, 3069, 1438, 2815, 33, 3488, 1173, 2393, 2738, 1340, 2457, 2796, 2947, 3540, 313, 1249, 2227, 2276, 3440, 3085, 885, 3607, 2451, 2881, 2807, 3098, 1753, 138, 358, 931, 3435, 2485, 3621, 268, 3414, 835, 128, 1355, 3593, 429, 1990, 3362, 1134, 2748, 2765, 2542, 3523, 427, 3396, 12, 3055, 2960, 954, 2729, 340, 298, 1629, 1260, 3627, 2341, 2600, 2343, 1432, 1576, 2609, 3015, 3147, 3322, 1101, 3060, 539, 2273, 1206, 1314, 2334, 1809, 3154, 1471, 1225, 131, 2373, 1015, 3309, 3270, 3080, 1910, 2073, 2790, 617, 3083, 2066, 496, 835, 246, 2728, 2555, 2142, 3562, 2081, 761, 3450, 2777, 731, 2698, 1289, 2262, 3055, 1152, 1289, 1067, 695, 1942, 3255, 1212, 974, 1295, 839, 2274, 722, 1858, 2546, 3559, 258, 2867, 1948, 1900, 1082, 3527, 3517, 76, 601, 3340, 925, 533, 2226, 2281, 1620, 1854, 711, 2922, 2429, 239, 295, 510, 2498, 1706, 669, 1694, 1506, 3239, 2688, 67, 2101, 1239, 108, 2586, 1456, 1153, 2642, 2460, 1579, 88, 700, 1331, 59, 2020, 1924, 3462, 1160, 3593, 1191, 1438, 1338, 561, 794, 979, 1065, 1914, 3225, 3238, 2298, 3630, 2126, 164, 3497, 3377, 3403, 3317, 2108, 2208, 3085, 2618, 1720, 2189, 2650, 1324, 163, 1840, 1748, 3441, 2987, 2389, 1532, 2353, 1561, 1850, 862, 1404, 2310, 2560, 660, 564, 1261, 2706, 2296, 3035, 219, 3117, 2882, 3130, 15, 779, 979, 433, 865, 1303, 1243, 1252, 1387, 1908, 1926, 191, 2034, 1558, 2031, 2152, 977, 3399, 2992, 2626, 1597, 547, 2508, 3403, 273, 2771, 638, 316, 3150, 136, 1380, 1587, 2684, 1239, 2665, 2366, 779, 410, 28, 1493, 2742, 1268, 3389, 2228, 364, 3139, 1878, 1121, 2030, 2679, 1794, 2161, 163, 2917, 2200, 469, 443, 3200, 20, 2320, 3074, 614, 907, 1030, 2350, 2525, 2833, 1479, 3324, 1831, 1444, 1390, 1603, 102, 1986, 902, 3330, 548, 2028, 509, 1560, 1370, 1136, 2523, 125, 2032, 1923, 858, 530, 879, 711, 655, 1314, 714, 2593, 3348, 2354, 2395, 3605, 1564, 1925, 938, 533, 1072, 702, 2111, 1931, 3222, 987, 3473, 3324, 2997, 469, 786, 821, 715, 3245, 1961, 2237, 3393, 465, 2590, 3428, 2711, 1364, 2380, 1428, 1353, 1107, 3018, 3420, 1443, 3404, 174, 3398, 1562, 1707, 699, 2134, 2577, 251, 1782, 2074, 3075, 1894, 1472, 1748, 721, 1864, 3495, 239, 2706, 3460, 756, 2819, 3141, 3379, 3351, 1572, 3197, 2170, 174, 2630, 1504, 1260, 1322, 20, 2746, 2709, 1958, 2944, 1727, 2189, 593, 1284, 2561, 3189, 2447, 310, 607, 2396, 1184, 641, 394, 851, 599, 3610, 1114, 2800, 755, 3256, 1504, 1884, 265, 915, 514, 545, 1800, 2959, 694, 2996, 3083, 645, 2000, 171, 2944, 1352, 1523, 1361, 1930, 997, 1530, 1288, 2045, 666, 659, 1515, 2140, 573, 2998, 3312, 2851, 1759, 1593, 732, 753, 2592, 1361, 609, 2212, 2723, 2195, 202, 3340, 3255, 1446, 1060, 3506, 2623, 213, 3120, 2141, 1891, 1340, 1324, 1187, 3025, 3295, 762, 1888, 2067, 8, 2251, 2948, 2161, 1270, 2847, 2310, 1052, 2915, 3248, 1432, 2699, 2871, 2214, 2976, 173, 2981, 158, 1958, 3187, 1644, 2910, 1565, 1304, 2405, 2803, 3125, 2040, 1298, 2137, 3611, 2520, 8, 163, 2029, 146, 3007, 2159, 3211, 836, 193, 2638, 2924, 362, 3488, 2225, 2493, 3558, 3506, 727, 211, 602, 3206, 32, 3293, 2236, 1275, 2404, 818, 2373, 3392, 3296, 2776, 3341, 2038, 3101, 3091, 2563, 3108, 1878, 3284, 717, 2167, 2649, 1625, 3296, 441, 3415, 936, 1807, 3256, 458, 298, 1124, 2565, 3609, 2395, 2680, 1530, 909, 3094, 1214, 483, 75, 2221, 3249, 1394, 2752, 2402, 1534, 3151, 241, 475, 2525, 2576, 819, 446, 217, 3191, 2785, 671, 1680], 5080, 14));
  });

  it.skip('tst_findSmallestInteger', () => {
    let s = new DSAService();
    console.log(s.findSmallestInteger([1, -10, 7, 13, 6, 8], 5));
  });

  it.skip('test_search', () => {
    let s = new DSAService();
    console.log(s.countOccurence([0, 1, 1, 1, 1, 1, 1, 2, 4, 5, 6, 7], 5));
  });

  it.skip('test_smallestMissingValueSubtree', () => {
    let s = new DSAService();
    console.log(s.smallestMissingValueSubtree([-1, 0, 0, 2], [1, 2, 3, 4]));
    console.log(s.smallestMissingValueSubtree([-1, 0, 1, 0, 3, 3], [5, 4, 6, 2, 1, 3]));
    console.log(s.smallestMissingValueSubtree([-1, 2, 3, 0, 2, 4, 1], [2, 3, 4, 5, 6, 7, 8]));
  });

  it.skip('test_solve', () => {
    let s = new DSAService();
    let board = [["X", "O", "X", "X"], ["X", "O", "X", "X"], ["X", "O", "O", "X"], ["X", "X", "O", "O"]];
    s.solve(board);
    console.log(board);

    board = [["X"]]
    s.solve(board);
    console.log(board);
  });

  it.skip('test_getPermutation', () => {
    let s = new DSAService();
    console.log(s.getPermutation(4, 9));
  });

  it.skip('test_nQueens', () => {
    let s = new DSAService();
    console.log(s.solveNQueens(4));
  });

  it.skip('test_dailyTemperatures', () => {
    let s = new DSAService();
    console.log(s.dailyTemperatures([73, 74, 75, 71, 69, 72, 76, 73]));
  });

  it.skip('test_stockSpanner', () => {
    let s = new StockSpanner();
    console.log(s.next(100)); // return 1
    console.log(s.next(80));  // return 1
    console.log(s.next(60));  // return 1
    console.log(s.next(70));  // return 2
    console.log(s.next(60));  // return 1
    console.log(s.next(75));
    console.log(s.next(85));
  });

  it.skip('test_greatestNumber', () => {
    let s = new DSAService();
    console.log(s.maxNumber([6, 7], [6, 0, 4], 5));
    console.log(s.maxNumber([2, 5, 6, 4, 4, 0], [7, 3, 8, 0, 6, 5, 7, 6, 2], 15));
  });

  it.skip('test_eraseIntervals', () => {
    let s = new DSAService();
    console.log(s.eraseOverlapIntervals([[-52, 31], [-73, -26], [82, 97], [-65, -11], [-62, -49], [95, 99], [58, 95], [-31, 49], [66, 98], [-63, 2], [30, 47], [-40, -26]]));
  });

  it.skip('test_findMinArrows', () => {
    let s = new DSAService();
    console.log(s.findMinArrowShots([[1, 2], [2, 3], [3, 4], [4, 5]]));
    console.log(s.findMinArrowShots([[1, 2], [3, 4], [5, 6], [7, 8]]));
  });

  it.skip('test_roomVisit', () => {
    let s = new DSAService();
    console.log(s.canVisitAllRooms([[1], [2], [3], []]));
    console.log(s.canVisitAllRooms([[1, 3], [3, 0, 1], [2], [0]]));
  });

  it.skip('test_uniquePAths', () => {
    let s = new DSAService();
    console.log(s.uniquePaths(3, 7));
  });

  it('test_lcs', () => {
    let s = new DSAService();
    console.log(s.longestCommonSubsequence("def", "abc"));
  })
})